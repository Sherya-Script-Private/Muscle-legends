local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Sherya-Script-Private/Elerium-V5/refs/heads/main/Library", true))()
local window = library:AddWindow("Sherya Script | Galaxy Hub", {
    main_color = Color3.fromRGB(0, 0, 0),
    min_size = Vector2.new(600, 660),
    can_resize = true,
})

local Farm = window:AddTab("Farm")
local Opti = window:AddTab("Optimizacion")
local FarmTab = window:AddTab("Extra")
local creditsTab = window:AddTab("Credits")

local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Variables globales corregidas
local startTime = 0
local rebirthStartTime = 0
local startRebirths = 0
local hasStarted = false
local targetRebirth = math.huge
local autoEatEnabled = false

local packFarmTarget = false
local packFarmInfinite = false
local fastStrength = false

-- Declarar variables para los toggles
local targetPackToggle = nil
local infinitePackToggle = nil
local fastStrengthToggle = nil

local function formatNumber(number)
    if number >= 1e15 then return string.format("%.2fQ", number/1e15)
    elseif number >= 1e12 then return string.format("%.2fT", number/1e12)
    elseif number >= 1e9 then return string.format("%.2fB", number/1e9)
    elseif number >= 1e6 then return string.format("%.2fM", number/1e6)
    elseif number >= 1e3 then return string.format("%.2fK", number/1e3)
    end
    return tostring(math.floor(number))
end

local function formatNumberWithCommas(number)
    local formatted = tostring(math.floor(number))
    local k
    while true do
        formatted, k = string.gsub(formatted, "^(-?%d+)(%d%d%d)", '%1,%2')
        if k == 0 then break end
    end
    return formatted
end

local function formatTime(seconds)
    local hours = math.floor(seconds / 3600)
    local minutes = math.floor((seconds % 3600) / 60)
    local secs = math.floor(seconds % 60)
    return string.format("%02d:%02d:%02d", hours, minutes, secs)
end

local packRebirthValues = {
    [0] = 1,  
    [1] = 2,  
    [2] = 4,  
    [3] = 6,  
    [4] = 8,  
    [5] = 10, 
    [6] = 12, 
    [7] = 14, 
    [8] = 16  
}

local function unequipAllPets()
    local petsFolder = player.petsFolder
    if not petsFolder then return end
    
    for _, folder in pairs(petsFolder:GetChildren()) do
        if folder:IsA("Folder") then
            for _, pet in pairs(folder:GetChildren()) do
                ReplicatedStorage.rEvents.equipPetEvent:FireServer("unequipPet", pet)
            end
        end
    end
    task.wait(0.1)
end

local function equipSpecificPacks(packName, count)
    unequipAllPets()
    task.wait(0.2)

    local packs = {}
    if player.petsFolder and player.petsFolder:FindFirstChild("Unique") then
        for _, pet in pairs(player.petsFolder.Unique:GetChildren()) do
            if pet.Name == packName then
                table.insert(packs, pet)
            end
        end
    end

    local packsToEquip = math.min(count, #packs)
    for i = 1, packsToEquip do
        ReplicatedStorage.rEvents.equipPetEvent:FireServer("equipPet", packs[i])
        task.wait(0.1)
    end

    return packsToEquip
end

local function findMachine(machineName)
    local machine = workspace.machinesFolder:FindFirstChild(machineName)
    if not machine then
        for _, folder in pairs(workspace:GetChildren()) do
            if folder:IsA("Folder") and folder.Name:find("machines") then
                machine = folder:FindFirstChild(machineName)
                if machine then break end
            end
        end
    end
    return machine
end

local function pressE()
    local vim = game:GetService("VirtualInputManager")
    vim:SendKeyEvent(true, "E", false, game)
    task.wait(0.1)
    vim:SendKeyEvent(false, "E", false, game)
end

local isPositionLocked = false
local originalCFrame = nil
local function lockPosition(lock)
    isPositionLocked = lock

    if lock and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        originalCFrame = player.Character.HumanoidRootPart.CFrame

        if not _G.positionConnection then
            _G.positionConnection = game:GetService("RunService").Heartbeat:Connect(function()
                if isPositionLocked and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and originalCFrame then
                    player.Character.HumanoidRootPart.CFrame = originalCFrame
                    player.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
                    player.Character.HumanoidRootPart.RotVelocity = Vector3.new(0, 0, 0)
                end
            end)
        end
    elseif not lock and _G.positionConnection then
        _G.positionConnection:Disconnect()
        _G.positionConnection = nil
    end
end

Farm:AddTextBox("Target Rebirth Amount", function(text)
    local num = tonumber(text)
    if num then
        targetRebirth = num
    else
        targetRebirth = math.huge
    end
end)

targetPackToggle = Farm:AddSwitch("Pack Farm | Target", function(bool)
    packFarmTarget = bool

    if bool then
        if packFarmInfinite and infinitePackToggle then
            packFarmInfinite = false
            infinitePackToggle:Set(false)
        end

        if fastStrength and fastStrengthToggle then
            fastStrength = false
            fastStrengthToggle:Set(false)
        end

        if targetRebirth ~= math.huge and targetRebirth > player.leaderstats.Rebirths.Value then
            task.spawn(function()
                lockPosition(true)

                while packFarmTarget do
                    local currentRebirths = player.leaderstats.Rebirths.Value

                    if currentRebirths >= targetRebirth then
                        packFarmTarget = false
                        targetPackToggle:Set(false)
                        lockPosition(false)
                        break
                    end

                    local rebirthCost = 10000 + (5000 * currentRebirths)
                    if player.ultimatesFolder:FindFirstChild("Golden Rebirth") then
                        local goldenRebirths = player.ultimatesFolder["Golden Rebirth"].Value
                        rebirthCost = math.floor(rebirthCost * (1 - (goldenRebirths * 0.1)))
                    end

                    local rebirthsNeeded = targetRebirth - currentRebirths
                    local packCount = 0

                    if rebirthsNeeded == 1 then
                        packCount = 0
                    else
                        for i = 8, 1, -1 do
                            if packRebirthValues[i] <= rebirthsNeeded then
                                packCount = i
                                break
                            end
                        end
                    end

                    equipSpecificPacks("Swift Samurai", 8)

                    while packFarmTarget and player.leaderstats.Strength.Value < rebirthCost do
                        for i = 1, 10 do
                            player.muscleEvent:FireServer("rep")
                        end
                        task.wait()
                    end

                    equipSpecificPacks("Tribal Overlord", packCount)

                    local machine = findMachine("Jungle Bar Lift")
                    if machine and machine:FindFirstChild("interactSeat") then
                        player.Character.HumanoidRootPart.CFrame = machine.interactSeat.CFrame * CFrame.new(0, 3, 0)
                        repeat
                            task.wait(0.1)
                            pressE()
                        until player.Character.Humanoid.Sit
                    end

                    local initialRebirths = player.leaderstats.Rebirths.Value
                    repeat
                        ReplicatedStorage.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
                        task.wait(0.1)
                    until player.leaderstats.Rebirths.Value > initialRebirths

                    task.wait(0.5)
                end

                lockPosition(false)
                unequipAllPets()
            end)
        else
            packFarmTarget = false
            targetPackToggle:Set(false)
        end
    else
        lockPosition(false)
        unequipAllPets()
    end
end)

infinitePackToggle = Farm:AddSwitch("Pack Farm | Infinite", function(bool)
    packFarmInfinite = bool

    if bool then
        if packFarmTarget and targetPackToggle then
            packFarmTarget = false
            targetPackToggle:Set(false)
        end

        if fastStrength and fastStrengthToggle then
            fastStrength = false
            fastStrengthToggle:Set(false)
        end

        task.spawn(function()
            lockPosition(true)

            while packFarmInfinite do
                local currentRebirths = player.leaderstats.Rebirths.Value

                local rebirthCost = 10000 + (5000 * currentRebirths)
                if player.ultimatesFolder:FindFirstChild("Golden Rebirth") then
                    local goldenRebirths = player.ultimatesFolder["Golden Rebirth"].Value
                    rebirthCost = math.floor(rebirthCost * (1 - (goldenRebirths * 0.1)))
                end

                equipSpecificPacks("Swift Samurai", 8)

                while packFarmInfinite and player.leaderstats.Strength.Value < rebirthCost do
                    for i = 1, 10 do
                        player.muscleEvent:FireServer("rep")
                    end
                    task.wait()
                end

                equipSpecificPacks("Tribal Overlord", 8)

                local machine = findMachine("Jungle Bar Lift")
                if machine and machine:FindFirstChild("interactSeat") then
                    player.Character.HumanoidRootPart.CFrame = machine.interactSeat.CFrame * CFrame.new(0, 3, 0)
                    repeat
                        task.wait(0.1)
                        pressE()
                    until player.Character.Humanoid.Sit
                end

                local initialRebirths = player.leaderstats.Rebirths.Value
                repeat
                    ReplicatedStorage.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
                    task.wait(0.1)
                until player.leaderstats.Rebirths.Value > initialRebirths

                task.wait(0.5)
            end

            lockPosition(false)
            unequipAllPets()
        end)
    else
        lockPosition(false)
        unequipAllPets()
    end
end)

fastStrengthToggle = Farm:AddSwitch("Pack Farm | Fast Strength", function(bool)
    fastStrength = bool

    if bool then
        if packFarmTarget and targetPackToggle then
            packFarmTarget = false
            targetPackToggle:Set(false)
        end

        if packFarmInfinite and infinitePackToggle then
            packFarmInfinite = false
            infinitePackToggle:Set(false)
        end

        task.spawn(function()
            equipSpecificPacks("Swift Samurai", 8)

            while fastStrength do
                for i = 1, 10 do
                    player.muscleEvent:FireServer("rep")
                end
                task.wait()
            end
        end)
    else
        unequipAllPets()
    end
end)

local statsFolder = Farm:AddFolder("Rebirth Statistics")
local runTimeLabel = statsFolder:AddLabel("RunTime: 00:00:00")
local currentRebirthsLabel = statsFolder:AddLabel("Current Rebirths: 0")
local rebirthGainsLabel = statsFolder:AddLabel("Rebirth Gains: 0")
local targetRebirthLabel = statsFolder:AddLabel("Target Rebirth: None")
local rebirthsNeededLabel = statsFolder:AddLabel("Rebirths Needed: N/A")
local timeToTargetLabel = statsFolder:AddLabel("Time To Target: N/A")
local estimatedCompletionLabel = statsFolder:AddLabel("Estimated Completion: N/A")
local perMinuteLabel = statsFolder:AddLabel("Per Minute: 0")
local perHourLabel = statsFolder:AddLabel("Per Hour: 0")
local hours12Label = statsFolder:AddLabel("12 Hours: 0")
local hours24Label = statsFolder:AddLabel("24 Hours: 0")

local settingsFolder = Farm:AddFolder("Settings")
settingsFolder:AddButton("Reset RunTime", function()
    startTime = os.time()
    rebirthStartTime = os.time()
    if player.leaderstats and player.leaderstats.Rebirths then
        startRebirths = player.leaderstats.Rebirths.Value
        hasStarted = true
    else
        startRebirths = 0
        hasStarted = false
    end
end)

-- Corregir el spawn de estadísticas
task.spawn(function()
    startTime = os.time()
    rebirthStartTime = os.time()

    if player.leaderstats and player.leaderstats.Rebirths then
        startRebirths = player.leaderstats.Rebirths.Value
    end

    while true do
        if player.leaderstats and player.leaderstats.Rebirths then
            local currentRebirths = player.leaderstats.Rebirths.Value
            local elapsedTime = os.time() - startTime
            local rebirthElapsedTime = os.time() - rebirthStartTime

            currentRebirthsLabel.Text = string.format("Current Rebirths: %s", 
                formatNumberWithCommas(currentRebirths))

            if targetRebirth ~= math.huge then
                targetRebirthLabel.Text = string.format("Target Rebirth: %s", 
                    formatNumberWithCommas(targetRebirth))
            else
                targetRebirthLabel.Text = "Target Rebirth: None"
            end

            if hasStarted then
                local gainedRebirths = currentRebirths - startRebirths

                rebirthGainsLabel.Text = string.format("Rebirth Gains: %s", 
                    formatNumberWithCommas(gainedRebirths))

                if rebirthElapsedTime > 0 then
                    local perMinute = gainedRebirths / (rebirthElapsedTime / 60)
                    local perHour = perMinute * 60

                    perMinuteLabel.Text = string.format("Per Minute: %s", 
                        formatNumberWithCommas(perMinute))
                    perHourLabel.Text = string.format("Per Hour: %s", 
                        formatNumberWithCommas(perHour))
                    hours12Label.Text = string.format("12 Hours: %s", 
                        formatNumberWithCommas(perHour * 12))
                    hours24Label.Text = string.format("24 Hours: %s", 
                        formatNumberWithCommas(perHour * 24))

                    if targetRebirth ~= math.huge then
                        local rebirthsNeeded = targetRebirth - currentRebirths
                        rebirthsNeededLabel.Text = string.format("Rebirths Needed: %s",
                            formatNumberWithCommas(rebirthsNeeded))

                        if perHour > 0 and rebirthsNeeded > 0 then
                            local hoursToTarget = rebirthsNeeded / perHour
                            local timeToTarget = formatTime(hoursToTarget * 3600)
                            timeToTargetLabel.Text = string.format("Time To Target: %s", timeToTarget)

                            local completionTimestamp = os.time() + (hoursToTarget * 3600)
                            local completionDate = os.date("%m/%d/%Y %H:%M", completionTimestamp)
                            estimatedCompletionLabel.Text = string.format("Estimated Completion: %s", completionDate)
                        elseif rebirthsNeeded <= 0 then
                            timeToTargetLabel.Text = "Time To Target: Reached!"
                            estimatedCompletionLabel.Text = "Estimated Completion: Completed!"
                        else
                            timeToTargetLabel.Text = "Time To Target: N/A"
                            estimatedCompletionLabel.Text = "Estimated Completion: N/A"
                        end
                    else
                        rebirthsNeededLabel.Text = "Rebirths Needed: N/A"
                        timeToTargetLabel.Text = "Time To Target: N/A"
                        estimatedCompletionLabel.Text = "Estimated Completion: N/A"
                    end
                end

                local timeString = formatTime(elapsedTime)
                runTimeLabel.Text = string.format("RunTime: %s", timeString)
            else
                rebirthGainsLabel.Text = "Rebirth Gains: 0"
                perMinuteLabel.Text = "Per Minute: 0"
                perHourLabel.Text = "Per Hour: 0"
                hours12Label.Text = "12 Hours: 0"
                hours24Label.Text = "24 Hours: 0"
                runTimeLabel.Text = "RunTime: 00:00:00"
                rebirthsNeededLabel.Text = "Rebirths Needed: N/A"
                timeToTargetLabel.Text = "Time To Target: N/A"
                estimatedCompletionLabel.Text = "Estimated Completion: N/A"
            end
        else
            currentRebirthsLabel.Text = "Current Rebirths: Waiting..."
        end

        task.wait(1)
    end
end)

local function checkForRebirthStart()
    if not player.leaderstats or not player.leaderstats:FindFirstChild("Rebirths") then
        repeat
            task.wait(0.5)
        until player.leaderstats and player.leaderstats:FindFirstChild("Rebirths")
    end

    local initialRebirths = player.leaderstats.Rebirths.Value

    player.leaderstats.Rebirths:GetPropertyChangedSignal("Value"):Connect(function()
        local newRebirths = player.leaderstats.Rebirths.Value
        if not hasStarted and newRebirths > initialRebirths then
            startTime = os.time()
            rebirthStartTime = os.time()
            startRebirths = initialRebirths
            hasStarted = true
        end
    end)
end

task.spawn(checkForRebirthStart)

-- SECCIÓN ANTI-LAG OPTIMIZADA
-- Variables globales para el Anti-Lag
local Workspace = game:GetService("Workspace")
local Lighting = game:GetService("Lighting")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")

local Character = player.Character or player.CharacterAdded:Wait()

local antiLagEnabled = false
local fpsMonitorConnection = nil
local autoCleanConnection = nil

-- Configuración
local OPTIMIZATION_CONFIG = {
    removeParticles = true,
    removeDecals = true,
    removeTextures = true,
    removeSounds = true,
    removeEffects = true,
    removeTerrain = true,
    removeUnusedParts = true,
    optimizeLighting = true,
    reduceRenderDistance = true,
}

-- Función para notificaciones
local function showNotification(title, text, duration)
    pcall(function()
        StarterGui:SetCore("SendNotification", {
            Title = title;
            Text = text;
            Duration = duration or 5;
        })
    end)
end

-- Función para eliminar objetos por clase
local function removeObjectsByClass(parent, className)
    pcall(function()
        for _, obj in pairs(parent:GetChildren()) do
            if obj:IsA(className) then
                obj:Destroy()
            end
            if #obj:GetChildren() > 0 then
                removeObjectsByClass(obj, className)
            end
        end
    end)
end

-- Función principal de limpieza
local function performCleanup()
    local startTime = tick()
    local objectsRemoved = 0
    
    local function protectPlayer(obj)
        return obj == Character or obj:IsDescendantOf(Character) or 
               obj == player or obj:IsDescendantOf(player)
    end
    
    pcall(function()
        -- Eliminar partículas y efectos
        if OPTIMIZATION_CONFIG.removeParticles then
            for _, obj in pairs(Workspace:GetDescendants()) do
                if not protectPlayer(obj) then
                    if obj:IsA("ParticleEmitter") or obj:IsA("Fire") or 
                       obj:IsA("Smoke") or obj:IsA("Sparkles") or
                       obj:IsA("Explosion") or obj:IsA("Trail") or
                       obj:IsA("Beam") then
                        obj:Destroy()
                        objectsRemoved = objectsRemoved + 1
                    end
                end
            end
        end
        
        -- Eliminar decals y texturas
        if OPTIMIZATION_CONFIG.removeDecals then
            removeObjectsByClass(Workspace, "Decal")
            removeObjectsByClass(Workspace, "Texture")
            removeObjectsByClass(Workspace, "SurfaceGui")
            objectsRemoved = objectsRemoved + 30
        end
        
        -- Eliminar sonidos
        if OPTIMIZATION_CONFIG.removeSounds then
            removeObjectsByClass(Workspace, "Sound")
            objectsRemoved = objectsRemoved + 15
        end
        
        -- Optimizar materiales
        for _, obj in pairs(Workspace:GetDescendants()) do
            if obj:IsA("BasePart") and not protectPlayer(obj) then
                obj.Material = Enum.Material.Plastic
                obj.Reflectance = 0
            end
        end
    end)
    
    local endTime = tick()
    showNotification("Anti-Lag OP", 
        string.format("Limpieza: %d objetos en %.2fs", objectsRemoved, endTime - startTime), 4)
end

-- Función para optimizar gráficos
local function optimizeGraphics()
    pcall(function()
        Lighting.GlobalShadows = false
        Lighting.FogEnd = 100
        Lighting.Technology = Enum.Technology.Legacy
        
        for _, effect in pairs(Lighting:GetChildren()) do
            if effect:IsA("PostEffect") then
                effect:Destroy()
            end
        end
        
        settings().Rendering.QualityLevel = 1
        settings().Rendering.MeshPartDetailLevel = Enum.MeshPartDetailLevel.Level04
    end)
end

-- Función de monitoreo FPS
local function startFPSMonitor()
    local lastCleanup = 0
    local frameCount = 0
    local startTime = tick()
    
    fpsMonitorConnection = RunService.Heartbeat:Connect(function()
        frameCount = frameCount + 1
        local currentTime = tick()
        
        if currentTime - startTime >= 1 then
            local fps = frameCount / (currentTime - startTime)
            
            if fps < 20 and currentTime - lastCleanup > 15 then
                spawn(performCleanup)
                lastCleanup = currentTime
            end
            
            frameCount = 0
            startTime = currentTime
        end
    end)
end

-- Función para detener monitoreo
local function stopFPSMonitor()
    if fpsMonitorConnection then
        fpsMonitorConnection:Disconnect()
        fpsMonitorConnection = nil
    end
    if autoCleanConnection then
        autoCleanConnection:Disconnect()
        autoCleanConnection = nil
    end
end

-- BOTONES EN LA TAB OPTIMIZACIÓN

-- Botón principal Anti-Lag
Opti:AddSwitch("Anti-Lag OP", function(Value)
    antiLagEnabled = Value
    
    if Value then
        -- Activar Anti-Lag
        showNotification("Anti-Lag OP", "🟢 Activado - Optimizando juego...", 3)
        
        -- Ejecutar optimizaciones iniciales
        spawn(function()
            optimizeGraphics()
            wait(0.5)
            performCleanup()
            wait(0.5)
            startFPSMonitor()
            
            -- Auto-limpieza cada 45 segundos
            autoCleanConnection = task.spawn(function()
                while antiLagEnabled do
                    wait(45)
                    if antiLagEnabled then
                        performCleanup()
                    end
                end
            end)
        end)
    else
        -- Desactivar Anti-Lag
        stopFPSMonitor()
        showNotification("Anti-Lag OP", "🔴 Desactivado", 2)
    end
end)

-- Botón de limpieza manual
Opti:AddButton("🗑️ Limpieza Manual", function()
    showNotification("Limpieza Manual", "Ejecutando limpieza...", 2)
    performCleanup()
end)

-- Botón modo extremo
Opti:AddButton(" Modo Extremo", function()
    showNotification("Modo Extremo", " Eliminando TODO excepto jugador...", 3)
    
    spawn(function()
        pcall(function()
            for _, obj in pairs(Workspace:GetChildren()) do
                if obj ~= Character and not obj:IsA("Camera") and 
                   obj.Name ~= "Terrain" and obj.Name ~= "CurrentCamera" then
                    
                    if not (obj.Name:lower():find("spawn") or obj.Name:lower():find("base")) then
                        obj:Destroy()
                    end
                end
            end
            
            -- Limpiar ReplicatedStorage
            for _, obj in pairs(ReplicatedStorage:GetChildren()) do
                if obj:IsA("Script") or obj:IsA("LocalScript") then
                    obj:Destroy()
                end
            end
        end)
        
        showNotification("Modo Extremo", "✅ Limpieza extrema completada!", 4)
    end)
end)

-- Botón optimizar gráficos
Opti:AddButton("Optimizar Gráficos", function()
    optimizeGraphics()
    showNotification("Gráficos", "📱 Optimizado para móvil!", 3)
end)

-- Toggles de configuración
Opti:AddSwitch("Eliminar Partículas", function(Value)
    OPTIMIZATION_CONFIG.removeParticles = Value
end)

Opti:AddSwitch("Eliminar Sonidos", function(Value)
    OPTIMIZATION_CONFIG.removeSounds = Value
end)

Opti:AddSwitch("Eliminar Texturas", function(Value)
    OPTIMIZATION_CONFIG.removeDecals = Value
    OPTIMIZATION_CONFIG.removeTextures = Value
end)

-- Información del sistema
Opti:AddLabel("Estado: Sistema cargado correctamente")
Opti:AddLabel("Tip: Activa Anti-Lag OP para mejor rendimiento")

-- Notificación de carga
showNotification("Tab Optimización", "✅ Anti-Lag OP cargado en la interfaz!", 5)

-- FUNCIONES PARA FARMTAB
local function eatProteinEgg()
    pcall(function()
        local backpack = player:WaitForChild("Backpack")
        local character = player.Character or player.CharacterAdded:Wait()

        local egg = backpack:FindFirstChild("Protein Egg")
        if egg then
            egg.Parent = character
            egg:Activate()
        end
    end)
end

-- Spawn para auto eat
task.spawn(function()
    while true do
        if autoEatEnabled then
            eatProteinEgg()
            task.wait(1800) -- 30 minutos
        else
            task.wait(1)
        end
    end
end)

-- Switches y botones corregidos para FarmTab
FarmTab:AddSwitch("Auto Eat Egg 30 Minutes", function(state)
    autoEatEnabled = state
end)

FarmTab:AddSwitch("Lock Position", function(Value)
    if Value then
        local currentPos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        getgenv().posLock = game:GetService("RunService").Heartbeat:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = currentPos
            end
        end)
    else
        if getgenv().posLock then
            getgenv().posLock:Disconnect()
            getgenv().posLock = nil
        end
    end
end)

FarmTab:AddSwitch("Delete All Frames", function(state)
    if state then
        pcall(function()
            local rSto = game:GetService("ReplicatedStorage")
            for _, obj in pairs(rSto:GetChildren()) do
                if obj.Name:match("Frame$") and obj:IsA("GuiObject") then
                    obj:Destroy()
                end
            end
        end)
    end
end)

-- Anti AFK Button
FarmTab:AddButton("Anti AFK", function()
    -- Anti AFK implementation
    local GC = getconnections or get_signal_cons
    if GC then
        for i, v in pairs(GC(game.Players.LocalPlayer.Idled)) do
            if v["Disable"] then
                v["Disable"](v)
            elseif v["Disconnect"] then
                v["Disconnect"](v)
            end
        end
    else
        -- Fallback method if getconnections isn't available
        local VirtualUser = game:GetService("VirtualUser")
        game:GetService("Players").LocalPlayer.Idled:Connect(function()
            VirtualUser:CaptureController()
            VirtualUser:ClickButton2(Vector2.new())
        end)
    end
    
    -- Notify user
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Anti AFK",
        Text = "Anti AFK has been enabled!",
        Duration = 5
    })
    
    -- Additional periodic movement to prevent AFK
    spawn(function()
        while wait(30) do
            local VirtualUser = game:GetService("VirtualUser")
            VirtualUser:CaptureController()
            VirtualUser:ClickButton2(Vector2.new())
        end
    end)
end)

creditsTab:AddLabel("╭──────────────────────────╮")
creditsTab:AddLabel(" Script hecho por Isabella")
creditsTab:AddLabel("╰──────────────────────────╯")
creditsTab:AddLabel("")
creditsTab:AddLabel("User de Roblox: MissSherya")
creditsTab:AddLabel("Instagram: Sherya_Luck")
creditsTab:AddLabel("TikTok: Sherya6000")
creditsTab:AddLabel("Discord: isabella_hrz")
creditsTab:AddLabel("")
creditsTab:AddLabel("Thanks por usar el script")
creditsTab:AddLabel("")
creditsTab:AddLabel("Recomienda el script para hacer mas actualizaciones")
creditsTab:AddLabel("Hago peticiones de otros juegos")
creditsTab:AddLabel("Diviertete amiguito")

creditsTab:AddButton("Servidor Discord", function()
    setclipboard("https://discord.gg/rnDrhTZZCF")
end)
