local Library = loadstring(game:HttpGetAsync("https://github.com/ActualMasterOogway/Fluent-Renewed/releases/latest/download/Fluent.luau"))()
local SaveManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/SaveManager.luau"))()
local InterfaceManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/InterfaceManager.luau"))()

local Window = Library:CreateWindow({
    Title = "Sherya Script | Galaxy Hub",
    SubTitle = "By Isabella",
    TabWidth = 160,
    Size = UDim2.fromOffset(400, 400),
    Acrylic = true,
    Theme = "Amethyst Dark",
    MinimizeKey = Enum.KeyCode.RightControl
})

local Tabs = {
    Main = Window:CreateTab({ Title = "Main", Icon = "house" }),
    Farm = Window:CreateTab({ Title = "Farm", Icon = "wheat" }),
    Misc = Window:CreateTab({ Title = "Misc", Icon = "settings" }),
    Pets = Window:CreateTab({ Title = "Pets", Icon = "heart" }),
    Stats = Window:CreateTab({ Title = "Stats", Icon = "trending-up" }),
    Calculator = Window:CreateTab({ Title = "Calculator", Icon = "calculator" }),
    Killer = Window:CreateTab({ Title = "Killer", Icon = "sword" }),
    Teleport = Window:CreateTab({ Title = "Teleport", Icon = "zap" }),
    Credits = Window:CreateTab({ Title = "Credits", Icon = "users" })
}

local BrawlGroup = Tabs.Main:CreateGroup("Auto Brawls")

local godModeToggle = false
BrawlGroup:AddToggle("God Mode Brawl", {
    Flag = "GodModeBrawl",
    Callback = function(State)
        godModeToggle = State
        if State then
            task.spawn(function()
                while godModeToggle do
                    game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
                    task.wait(0)
                end
            end)
        end
    end
})

BrawlGroup:AddToggle("Auto Win Brawls", {
    Flag = "AutoWinBrawl",
    Callback = function(bool)
        getgenv().autoWinBrawl = bool

        local function equipPunch()
            if not getgenv().autoWinBrawl then return end
            local character = game.Players.LocalPlayer.Character
            if not character then return false end
            if character:FindFirstChild("Punch") then return true end
            local backpack = game.Players.LocalPlayer.Backpack
            if not backpack then return false end
            for _, tool in pairs(backpack:GetChildren()) do
                if tool.ClassName == "Tool" and tool.Name == "Punch" then
                    tool.Parent = character
                    return true
                end
            end
            return false
        end

        local function isValidTarget(player)
            if not player or not player.Parent then return false end
            if player == game.Players.LocalPlayer then return false end
            if _G.whitelistedPlayers and table.find(_G.whitelistedPlayers, player.Name) then return false end
            local character = player.Character
            if not character or not character.Parent then return false end
            local humanoid = character:FindFirstChild("Humanoid")
            if not humanoid or humanoid.Health <= 0 then return false end
            if humanoid:GetState() == Enum.HumanoidStateType.Dead then return false end
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            if not rootPart or not rootPart.Parent then return false end
            return true
        end

        local function isLocalPlayerReady()
            local player = game.Players.LocalPlayer
            if not player then return false end
            local character = player.Character
            if not character or not character.Parent then return false end
            local humanoid = character:FindFirstChild("Humanoid")
            if not humanoid or humanoid.Health <= 0 then return false end
            local leftHand = character:FindFirstChild("LeftHand")
            local rightHand = character:FindFirstChild("RightHand")
            return (leftHand ~= nil or rightHand ~= nil)
        end

        local function safeTouchInterest(targetPart, localPart)
            if not targetPart or not targetPart.Parent then return false end
            if not localPart or not localPart.Parent then return false end
            local success = pcall(function()
                firetouchinterest(targetPart, localPart, 0)
                task.wait(0.01)
                firetouchinterest(targetPart, localPart, 1)
            end)
            return success
        end

        if bool then
            -- Auto Join Brawl on start
            task.spawn(function()
                while getgenv().autoWinBrawl and task.wait(0.5) do
                    if not getgenv().autoWinBrawl then break end
                    pcall(function()
                        if game.Players.LocalPlayer.PlayerGui.gameGui.brawlJoinLabel.Visible then
                            game.ReplicatedStorage.rEvents.brawlEvent:FireServer("joinBrawl")
                            game.Players.LocalPlayer.PlayerGui.gameGui.brawlJoinLabel.Visible = false
                        end
                    end)
                end
            end)

            -- Equip Punch
            task.spawn(function()
                while getgenv().autoWinBrawl and task.wait(0.5) do
                    if not getgenv().autoWinBrawl then break end
                    equipPunch()
                end
            end)

            -- Auto Punch
            task.spawn(function()
                while getgenv().autoWinBrawl and task.wait(0.1) do
                    if not getgenv().autoWinBrawl then break end
                    if isLocalPlayerReady() and game.ReplicatedStorage.brawlInProgress.Value then
                        local player = game.Players.LocalPlayer
                        pcall(function() player.muscleEvent:FireServer("punch", "rightHand") end)
                        pcall(function() player.muscleEvent:FireServer("punch", "leftHand") end)
                    end
                end
            end)

            -- Touch Targets
            task.spawn(function()
                while getgenv().autoWinBrawl and task.wait(0.05) do
                    if not getgenv().autoWinBrawl then break end
                    if isLocalPlayerReady() and game.ReplicatedStorage.brawlInProgress.Value then
                        local character = game.Players.LocalPlayer.Character
                        local leftHand = character:FindFirstChild("LeftHand")
                        local rightHand = character:FindFirstChild("RightHand")
                        for _, player in pairs(game.Players:GetPlayers()) do
                            if not getgenv().autoWinBrawl then break end
                            pcall(function()
                                if isValidTarget(player) then
                                    local targetRoot = player.Character.HumanoidRootPart
                                    if leftHand then safeTouchInterest(targetRoot, leftHand) end
                                    if rightHand then safeTouchInterest(targetRoot, rightHand) end
                                end
                            end)
                            task.wait(0.01)
                        end
                    end
                end
            end)
        end
    end
})

BrawlGroup:AddToggle("Auto Join Brawls", {
    Flag = "AutoJoinBrawls",
    Callback = function(bool)
        getgenv().autoJoinBrawl = bool
        if bool then
            task.spawn(function()
                while getgenv().autoJoinBrawl and task.wait(0.5) do
                    if not getgenv().autoJoinBrawl then break end
                    pcall(function()
                        if game.Players.LocalPlayer.PlayerGui.gameGui.brawlJoinLabel.Visible then
                            game.ReplicatedStorage.rEvents.brawlEvent:FireServer("joinBrawl")
                            game.Players.LocalPlayer.PlayerGui.gameGui.brawlJoinLabel.Visible = false
                        end
                    end)
                end
            end)
        end
    end
})

local JungleGymGroup = Tabs.Main:CreateGroup("Jungle Gym")

local VIM = game:GetService("VirtualInputManager")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local function pressE()
    VIM:SendKeyEvent(true, "E", false, game)
    task.wait(0.1)
    VIM:SendKeyEvent(false, "E", false, game)
end

local function autoLift()
    while getgenv().working do
        LocalPlayer.muscleEvent:FireServer("rep")
        task.wait()
    end
end

local function teleportAndStart(machineName, position)
    local character = LocalPlayer.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        character.HumanoidRootPart.CFrame = position
        task.wait(0.1)
        pressE()
        task.spawn(autoLift)
    end
end

JungleGymGroup:AddToggle("Jungle Bench Press", {
    Flag = "JungleBench",
    Callback = function(bool)
        if getgenv().working and not bool then
            getgenv().working = false
            return
        end
        getgenv().working = bool
        if bool then
            teleportAndStart("Bench Press", CFrame.new(-8173, 64, 1898))
        end
    end
})

JungleGymGroup:AddToggle("Jungle Squat", {
    Flag = "JungleSquat",
    Callback = function(bool)
        if getgenv().working and not bool then
            getgenv().working = false
            return
        end
        getgenv().working = bool
        if bool then
            teleportAndStart("Squat", CFrame.new(-8352, 34, 2878))
        end
    end
})

JungleGymGroup:AddToggle("Jungle Pull Ups", {
    Flag = "JunglePullUps",
    Callback = function(bool)
        if getgenv().working and not bool then
            getgenv().working = false
            return
        end
        getgenv().working = bool
        if bool then
            teleportAndStart("Pull Up", CFrame.new(-8666, 34, 2070))
        end
    end
})

JungleGymGroup:AddToggle("Jungle Boulder", {
    Flag = "JungleBoulder",
    Callback = function(bool)
        if getgenv().working and not bool then
            getgenv().working = false
            return
        end
        getgenv().working = bool
        if bool then
            teleportAndStart("Boulder", CFrame.new(-8621, 34, 2684))
        end
    end
})

